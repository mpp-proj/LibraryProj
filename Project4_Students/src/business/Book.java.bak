package business;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Optional;

/**
 *
 */
final public class Book implements Serializable {

	private static final long serialVersionUID = 6110690276685962829L;
	private BookCopy[] copies;
	private List<Author> authors;
	private String isbn;
	private String title;
	private int maxCheckoutLength;

	public Book(String isbn, String title, int maxCheckoutLength, List<Author> authors) {
		this.isbn = isbn;
		this.title = title;
		this.maxCheckoutLength = maxCheckoutLength;
		this.authors = Collections.unmodifiableList(authors);
		copies = new BookCopy[] { new BookCopy(this, 1, true) };

	}

	public void updateCopies(BookCopy copy) {

	}

	public List<Integer> getCopyNums() {

		return null;

	}

	public void addCopy() {
		BookCopy[] newArr = new BookCopy[copies.length + 1];
		System.arraycopy(copies, 0, newArr, 0, copies.length);
		newArr[copies.length] = new BookCopy(this, copies.length + 1, true);
		copies = newArr;
	}
	public void addCopy(int copyNum) {
		BookCopy[] newArr = new BookCopy[copies.length + 1];
		System.arraycopy(copies, 0, newArr, 0, copies.length);
		newArr[copies.length] = new BookCopy(this, copyNum, true);
		copies = newArr;
	}

	@Override
	public boolean equals(Object ob) {
		if (ob == null)
			return false;
		if (ob.getClass() != getClass())
			return false;
		Book b = (Book) ob;
		return b.isbn.equals(isbn);
	}

	public boolean isAvailable() {
		boolean result = false;
		for(BookCopy bc: copies)
		{
			if(bc.isAvailable())
			{
				result = true;
				break;
			}
		}
		return result;
	}

	@Override
	public String toString() {
		return "isbn: " + isbn + ", Title: " + title;
	}

	public int getNumCopies() {
		return copies.length;
	}

	public String getTitle() {
		return title;
	}

	public BookCopy[] getCopies() {
		return copies;
	}

	public List<Author> getAuthors() {
		return authors;
	}

	public String getIsbn() {
		return isbn;
	}

	public BookCopy getNextAvailableCopy() {
		BookCopy tmp = null;
		if (getNumCopies() > 0) {
			for(BookCopy bc: copies)
			{
				if(bc.isAvailable())
				{
					tmp = bc;
					bc.changeAvailability();
					break;
				}
			}
		}
		return tmp;
	}

	public BookCopy getCopy(int copyNum) {
		BookCopy bk = null;
		for(BookCopy b: copies)
			if(b.getCopyNum() == copyNum)
			{
				bk = b;
				break;
			}
		return bk;
	}

	public int getMaxCheckoutLength() {
		return maxCheckoutLength;
	}

}
